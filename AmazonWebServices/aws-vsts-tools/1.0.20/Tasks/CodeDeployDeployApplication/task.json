{
    "id": "2ff35748-7800-409d-9511-a0a37ff0d348",
    "name": "CodeDeployDeployApplication",
    "friendlyName": "AWS CodeDeploy Application Deployment",
    "description": "Deploys an application to Amazon EC2 instance(s) using AWS CodeDeploy",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [AWS CodeDeploy User Guide](https://docs.aws.amazon.com/codedeploy/latest/userguide/) for more information on working with AWS CodeDeploy.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "0",
        "Patch": "20"
    },
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "Deploy with CodeDeploy: $(applicationName)",
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "OutputOptions",
            "displayName": "Output",
            "isExpanded": false
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the AWS credentials to use when it executes on a build host. If needed, click on 'Manage', and add a new Service Endpoint of type 'AWS'."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html)."
        },
        {
            "name": "applicationName",
            "label": "Application Name",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "The name of the AWS CodeDeploy application."
        },
        {
            "name": "deploymentGroupName",
            "label": "Deployment Group Name",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "The name of the deployment group to deploy to."
        },
        {
            "name": "deploymentRevisionSource",
            "label": "Deployment Revision Source",
            "type": "pickList",
            "defaultValue": "workspace",
            "helpMarkDown": "Specifies the source of the revision to be deployed. You can select from:\n\n**Folder or archive file in the workspace**: the task will create or use an existing zip archive in the location specified to *Revision Bundle*, upload the archive to Amazon S3 and supply the key of the S3 object to CodeDeploy as the revision source.\n\n**Archive file in Amazon S3**: select to specify the key of an archive previously uploaded to Amazon S3 as the deployment revision source.",
            "required": true,
            "options": {
                "workspace": "Folder or archive file in the workspace",
                "s3": "Archive file in Amazon S3"
            }
        },
        {
            "name": "revisionBundle",
            "label": "Revision Bundle",
            "type": "filePath",
            "defaultValue": "",
            "required": true,
            "visibleRule": "deploymentRevisionSource = workspace",
            "helpMarkDown": "The artifacts to be deployed.\n\nYou can supply a folder or a filename to this parameter. If a folder is supplied the task will zip the contents of the folder recursively into an archive file before uploading the archive to Amazon S3. If a filename is supplied the task uploads it, unmodified, to Amazon S3. Note that CodeDeploy requires the appspec.yml file describing the application to exist at the root of the specified folder or archive file."
        },
        {
            "name": "bucketName",
            "type": "string",
            "label": "Bucket Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the bucket to which the revision bundle will be will be uploaded."
        },
        {
            "name": "bundlePrefix",
            "type": "string",
            "label": "Target Folder",
            "defaultValue": "",
            "required": false,
            "visibleRule": "deploymentRevisionSource = workspace",
            "helpMarkDown": "Optional folder (key prefix) for the uploaded revision bundle in the bucket. If not specified the bundle will be uploaded to the root of the bucket."
        },
        {
            "name": "bundleKey",
            "type": "string",
            "label": "Revision Bundle Key",
            "defaultValue": "",
            "required": false,
            "visibleRule": "deploymentRevisionSource = s3",
            "helpMarkDown": "The Amazon S3 object key of the previously uploaded archive file containing the deployment revision artifacts."
        },
        {
            "name": "description",
            "label": "Description",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Optional description for the deployment."
        },
        {
            "name": "fileExistsBehavior",
            "label": "Existing File Behavior",
            "type": "pickList",
            "defaultValue": "DISALLOW",
            "helpMarkDown": "How AWS CodeDeploy should handle files that already exist in a deployment target location but weren't part of the previous successful deployment.",
            "options": {
                "DISALLOW": "Fail the deployment",
                "OVERWRITE": "Overwrite the version already on the instance with the version in the new application revision",
                "RETAIN": "Keep the version already on the instance as part of the new deployment"
            }
        },
        {
            "name": "updateOutdatedInstancesOnly",
            "label": "Update Outdated Instances Only",
            "type": "boolean",
            "defaultValue": false,
            "helpMarkDown": "If checked deploys to only those instances that are not running the latest application revision.",
            "groupName": "advanced"
        },
        {
            "name": "ignoreApplicationStopFailures",
            "label": "Ignore Application Stop Failures",
            "type": "boolean",
            "defaultValue": false,
            "helpMarkDown": "If checked then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will not be considered to have failed at that point and will continue on to the BeforeInstall deployment lifecycle event.",
            "groupName": "advanced"
        },
        {
            "name": "outputVariable",
            "type": "string",
            "label": "Output Variable",
            "defaultValue": "",
            "groupName": "OutputOptions",
            "helpMarkDown": "The name of the variable that will contain the deployment ID on task completion. The variable can be used as $(variableName) to refer to the function result in subsequent tasks.",
            "required": false
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "CodeDeployDeployApplication.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "UploadingBundle": "Uploading revision bundle %s to object %s in bucket %s",
        "BundleUploadCompleted": "Bundle upload completed successfully",
        "BundleUploadFailed": "Upload of revision bundle failed with error: %s",
        "DeployingRevision": "Deploying the new revision",
        "DeploymentStarted": "Started deployment of new revision to deployment group %s for application %s, deployment ID %s",
        "DeploymentError": "Request to deploy new revision returned error: %s",
        "WaitingForDeployment": "Waiting for deployment to complete",
        "WaitConditionSatisifed": "Deployment transitioned to successful status",
        "DeploymentFailed": "Deployment failed",
        "SettingOutputVariable": "Setting output variable %s with the ID of the deployment",
        "ApplicationDoesNotExist": "Application %s does not exist",
        "DeploymentGroupDoesNotExist": "Deployment group %s does not exist for application %s",
        "CreatingDeploymentBundleArchiveFromFolder": "Creating deployment bundle archive from build output at %s",
        "CreatedBundleArchive": "Created deployment bundle %s",
        "ArchiveSize": "Archive size: %s total bytes",
        "ZipError": "Zip Error: %s",
        "RevisionBundleDoesNotExist": "Archive with key %s does not exist in the Amazon S3 bucket %s",
        "DeletingUploadedBundle": "Deleting uploaded bundle %s created by task",
        "TaskCompleted": "Deployment to application %s completed"
    }
}
