{
  "id": "431e1ba0-9d2b-11e6-a75c-e7e594e50d1c",
  "name": "EnableF5PoolMember",
  "friendlyName": "Enable - Pool Member",
  "description": "Enable Pool Member(s)",
  "author": "Jason Vercellone",
  "helpMarkDown": "",
  "category": "Deploy",
  "visibility": [
    "Build",
    "Release"
  ],
  "demands": [],
  "version": {
    "Major": "0",
    "Minor": "1",
    "Patch": "9"
  },
  "minimumAgentVersion": "1.95.0",
  "instanceNameFormat": "Enable Pool Member: $(PoolName) ($(Group))",
  "inputs": [
    {
      "name": "LTMName",
      "type": "string",
      "label": "IP Address",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "F5 device name or IP address."
    },
    {
      "name": "PoolName",
      "type": "string",
      "label": "Pool",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "F5 pool name *case sensitive*."
    },
    {
      "name": "UserName",
      "type": "string",
      "label": "Login",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "F5 user name"
    },
    {
      "name": "Password",
      "type": "string",
      "label": "Password",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "F5 user password. The best practice is to create a variable in the Build or Release definition, and mark it as 'Secret' to secure it, and then use it here, like '$(F5Password)'."
    },
    {
      "name": "Group",
      "type": "pickList",
      "label": "Member Group",
      "defaultValue": "",
      "options": {
        "All": "All",
        "A": "A (Odd)",
        "B": "B (Even)"
      },  
      "required": true,
      "helpMarkDown": "Group of pool members to enable."
    },
    {
      "name": "DeviceGroup",
      "type": "string",
      "label": "Device Group",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "F5 device group to sync to (optional)."
    }
  ],
  "execution": {
    "PowerShell": {
      "target": "$(currentDirectory)\\Enable-F5PoolMember.ps1",
      "argumentFormat": "",
      "workingDirectory": "$(currentDirectory)"
    }
  }
}