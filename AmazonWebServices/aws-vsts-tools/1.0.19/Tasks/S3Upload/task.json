{
    "id": "3a219265-181c-4ed2-9a51-75a7f308f0d5",
    "name": "S3Upload",
    "friendlyName": "AWS S3 Upload",
    "description": "Upload file and folder content to an Amazon Simple Storage Service (S3) Bucket",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [Working with Amazon S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) for more information on working with Amazon S3.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "0",
        "Patch": "19"
    },
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "S3 Upload: $(bucketName)",
    "groups": [
        {
            "name": "serverSideEncryption",
            "displayName": "Server-Side Encryption",
            "isExpanded": false
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the AWS credentials to use when it executes on a build host. If needed, click on 'Manage', and add a new Service Endpoint of type 'AWS'."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html)."
        },
        {
            "name": "bucketName",
            "type": "string",
            "label": "Bucket Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the bucket where the content will be uploaded. If the bucket does not exist it can be created if the 'Create S3 bucket if it does not exist' option is selected below."
        },
        {
            "name": "sourceFolder",
            "type": "filePath",
            "label": "Source Folder",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The source folder that the content pattern(s) will be run against. If not set the root of the work area is assumed. You can use [variables](https://go.microsoft.com/fwlink/?LinkID=550988). Example: $(Agent.BuildDirectory)"
        },
        {
            "name": "globExpressions",
            "type": "multiLine",
            "label": "Filename Patterns",
            "defaultValue": "**",
            "required": true,
            "helpMarkDown": "Glob patterns to select the file and folder content to be uploaded. Supports multiple lines of minimatch patterns."
        },
        {
            "name": "targetFolder",
            "type": "string",
            "label": "Target Folder (S3 key prefix)",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The target folder (referred to as a key prefix in S3) in the bucket to contain the uploaded content. If not set the root of the bucket is assumed. You can use [variables](https://go.microsoft.com/fwlink/?LinkID=550988)."
        },
        {
            "name": "filesAcl",
            "type": "pickList",
            "label": "Access Control (ACL)",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The canned Access Control List (ACL) to apply to the uploaded content. Refer to [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl).",
            "options": {
                "private": "private",
                "public-read": "public read",
                "public-read-write": "public read write",
                "authenticated-read": "authenticated read",
                "aws-exec-read": "aws-exec-read",
                "bucket-owner-read": "bucket-owner-read",
                "bucket-owner-full-control": "bucket-owner-full-control"
            }
        },
        {
            "name": "createBucket",
            "type": "boolean",
            "label": "Create S3 bucket if it does not exist",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Attempts to automatically create the S3 bucket if it does not exist."
        },
        {
            "name": "keyManagement",
            "type": "pickList",
            "label": "Encryption Key Management",
            "defaultValue": "none",
            "required": false,
            "helpMarkDown": "You can optionally request Amazon S3 to encrypt data at rest using server-side encryption. Server-side encryption is about data encryption at rest, that is, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it for you when you access it.\n\nSelect *Use AWS-managed encryption keys* if you want Amazon S3 to manage keys used to encrypt data. To manage and provide your own keys select *Use customer-provided encryption keys*. Selecting *Not using server-side encryption* disables server-side encryption for the uploaded object(s).",
            "options": {
                "none": "Not using server-side encryption",
                "awsManaged": "Use AWS-managed encryption keys",
                "customerManaged": "Use customer-provided encryption key"
            },
            "groupName": "serverSideEncryption"
        },
        {
            "name": "encryptionAlgorithm",
            "type": "radio",
            "label": "Encryption Algorithm",
            "required": false,
            "defaultValue": "KMS",
            "helpMarkDown": "Specifies a server-side encryption algorithm to use when Amazon S3 creates an object.",
            "options": {
                "KMS": "aws:kms",
                "AES256": "AES256"
            },
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = awsManaged"
        },
        {
            "name": "kmsMasterKeyId",
            "type": "string",
            "label": "KMS Master Encryption Key ID",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The ID of the AWS Key Management Service (KMS) master encryption key to be used when encrypting the object.\n\nRequired if Encryption Algorithm is set to *aws:kms*.",
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = awsManaged && encryptionAlgorithm = KMS"
        },
        {
            "name": "customerKey",
            "type": "string",
            "label": "Customer Key",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Hex-encoded string representing the encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then is discarded; Amazon does not store the encryption key. This value must be appropriate for use with the AES256 encryption algorithm used for encryption when customer managed keys are selected.\n\nRequired when Encryption Key Management is set to *Use customer-provided encryption key*.",
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = customerManaged"
        },
        {
            "name": "overwrite",
            "type": "boolean",
            "label": "Overwrite",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Replace existing files in and beneath the target folder.",
            "groupName": "advanced"
        },
        {
            "name": "flattenFolders",
            "type": "boolean",
            "label": "Flatten folders",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Flatten the folder structure and copy all files into the specified target folder in the bucket.",
            "groupName": "advanced"
        },
        {
            "name": "contentType",
            "type": "string",
            "label": "Content Type",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Set a custom content type for the uploaded files.\nThe task will apply built-in defaults for common file types (html, css, js, image files). This parameter can be used to override the built-in defaults. Note that any value is applied to all files processed by the task.",
            "groupName": "advanced"
        },
        {
            "name": "storageClass",
            "type": "pickList",
            "label": "Storage Class",
            "defaultValue": "STANDARD",
            "required": false,
            "helpMarkDown": "Choose a storage class depending on your use case scenario and performance access requirements.\n\n* *STANDARD* – This storage class (the default) is ideal for performance-sensitive use cases and frequently accessed data.\n* *STANDARD_IA* – This storage class (IA, for infrequent access) is optimized for long-lived and less frequently accessed data, for example backups and older data where frequency of access has diminished, but the use case still demands high performance. **Note** There is a retrieval fee associated with STANDARD_IA objects which makes it most suitable for infrequently accessed data.\n* *REDUCED_REDUNDANCY* – The Reduced Redundancy Storage (RRS) storage class is designed for noncritical, reproducible data stored at lower levels of redundancy than the STANDARD storage class, which reduces storage costs.\n\nSee [Storage Classes](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) in the Amazon S3 documentation for more information.",
            "groupName": "advanced",
            "options": {
                "STANDARD": "Standard",
                "STANDARD_IA": "Standard (Infrequent Access)",
                "REDUCED_REDUNDANCY": "Reduced Redundancy"
            }
        },
        {
            "name": "forcePathStyleAddressing",
            "type": "boolean",
            "label": "Force path style addressing",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If enabled path style URLs will be used for S3 objects. The default is off meaning the task will automatically switch between virtual host style addressing and path style addressing depending on whether the bucket name is DNS compatible.<br/><br/>For more information see [Virtual Hosting of Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html).",
            "groupName": "advanced"
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "S3Upload.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "FoundNFiles": "found %d files",
        "AllPaths": "All paths %s",
        "MatchedPaths": "Matched paths %s",
        "MatchedFiles": "Matched files list %s",
        "CreateBucketFailure": "Failed to create bucket",
        "BucketCreated": "Bucket created",
        "UploadingFile": "Uploading matched file %s, content type %s",
        "FileUploadCompleted": "Completed upload of %s to %s",
        "FileUploadFailed": "File upload failed",
        "TaskCompleted": "All uploads to S3 completed",
        "UploadingFiles": "Uploading files from %s to %s in bucket %s",
        "BucketNotExistNoAutocreate": "Bucket %s does not exist or you do not have access. Auto-create option not set, cannot continue.",
        "BucketNotExistCreating": "Bucket %s does not appear to exist (or you do not have access). Attempting to create in region %s."
    }
}
