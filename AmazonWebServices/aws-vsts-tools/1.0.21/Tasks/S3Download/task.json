{
    "id": "30f6a876-1d27-450c-b2bb-9f390a592082",
    "name": "S3Download",
    "friendlyName": "AWS S3 Download",
    "description": "Download file and folder content from an Amazon Simple Storage Service (S3) Bucket",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [Working with Amazon S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) for more information on working with Amazon S3.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "0",
        "Patch": "21"
    },
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "S3 Download: $(bucketName)",
    "groups": [
        {
            "name": "serverSideEncryption",
            "displayName": "Server-Side Encryption",
            "isExpanded": false
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the AWS credentials to use when it executes on a build host. If needed, click on 'Manage', and add a new Service Endpoint of type 'AWS'."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html)."
        },
        {
            "name": "bucketName",
            "type": "string",
            "label": "Bucket Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the bucket containing the content to be download."
        },
        {
            "name": "sourceFolder",
            "type": "string",
            "label": "Source Folder",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The source folder (or S3 key prefix) in the bucket that the content pattern(s) will be run against to select objects to download. If not set the root of the bucket is assumed."
        },
        {
            "name": "globExpressions",
            "type": "multiLine",
            "label": "Filename Patterns",
            "defaultValue": "**",
            "required": true,
            "helpMarkDown": "Glob patterns to select the content to be downloaded. Supports multiple lines of minimatch patterns."
        },
        {
            "name": "targetFolder",
            "type": "filePath",
            "label": "Target Folder",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The target folder to contain the downloaded content. You can use [variables](https://go.microsoft.com/fwlink/?LinkID=550988)."
        },
        {
            "name": "keyManagement",
            "type": "pickList",
            "label": "Encryption Key Management",
            "defaultValue": "noneOrAWSManaged",
            "required": false,
            "helpMarkDown": "When you retrieve an object from Amazon S3 that was encrypted by using server-side encryption with customer-provided encryption keys (SSE-C), set *Use customer-provided encryption key* and provide the customer key data to enable the object(s) to be decrypted. If the object(s) were encrypted using an Amazon S3-provided key leave this option set to the default value, *Not using server-side encryption, or encrypted using an Amazon S3 managed key*.",
            "options": {
                "noneOrAWSManaged": "Not using server-side encryption, or encrypted using an Amazon S3 managed key",
                "customerManaged": "Use customer-provided encryption key"
            },
            "groupName": "serverSideEncryption"
        },
        {
            "name": "customerKey",
            "type": "string",
            "label": "Customer Key",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Hex-encoded string representing the encryption key for Amazon S3 to use in decrypting data. This value is used to decrypt the object and then is discarded; Amazon does not store the encryption key. This value must be appropriate for use with the AES256 encryption algorithm used for encryption when customer managed keys are selected.\n\nRequired when Encryption Key Management is set to *Use customer-provided encryption key*.",
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = customerManaged"
        },
        {
            "name": "overwrite",
            "type": "boolean",
            "label": "Overwrite",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Replace existing files in and beneath the target folder. If not set and the file already exists in the target location an error is thrown.",
            "groupName": "advanced"
        },
        {
            "name": "forcePathStyleAddressing",
            "type": "boolean",
            "label": "Force path style addressing",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If enabled path style URLs will be used for S3 objects. The default is off meaning the task will automatically switch between virtual host style addressing and path style addressing depending on whether the bucket name is DNS compatible.<br/><br/>For more information see [Virtual Hosting of Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html).",
            "groupName": "advanced"
        },
        {
            "name": "flattenFolders",
            "type": "boolean",
            "label": "Flatten folders",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Removes any key (folder) structure from the objects and copies them all. Objects with the same leaf name will be overwritten if the Overwrite setting is set (otherwise an error will be thrown).",
            "groupName": "advanced"
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "S3Download.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "FileOverwriteWarning": "Target file %s exists for matched key %s, overwriting",
        "FileExistsError": "Target file %s exists for matched key %s, overwrite switch not set, cannot download",
        "ListingKeysFromPrefix": "Querying object keys with prefix %s for bucket %s",
        "ListingKeysFromRoot": "Querying object keys for bucket %s",
        "QueueingDownload": "Queueing download of %s",
        "GlobbingFromPrefix": "Globbing object keys with prefix %s against %s to determine file downloads",
        "GlobbingFromRoot": "Globbing object keys from bucket root against %s to determine file downloads",
        "MatchedKey": "...matched key %s",
        "DownloadingFiles": "Downloading files from %s in bucket %s to %s",
        "BucketNotExist": "Bucket %s does not exist",
        "TaskCompleted": "Downloads from S3 completed"
    }
}
