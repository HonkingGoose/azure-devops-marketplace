{
  "id": "3B1C7A45-C6E7-4C1E-93E8-BE8354DA868A",
  "name": "cboroson-VSTS-LetsEncrypt",
  "friendlyName": "Generate LetsEncrypt signed certificates and upload as secrets to Key Vault",
  "description": "Generate LetsEncrypt signed certificates and upload as secrets to Key Vault",
  "helpMarkDown": "[More Information, setup...](https://github.com/cboroson/VSTS-LetsEncrypt)",
  "category": "Utility",
  "author": "Craig Boroson (and modules from Ryan Bolger)",
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 2
  },
  "demands": [ "azureps" ],
  "visibility": [
    "Release",
    "Build"
  ],
  "minimumAgentVersion": "1.102.0",
  "groups": [
    {
      "name": "tagValues",
      "displayName": "Azure tags for setting or filtering secrets",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "ConnectedServiceName",
      "type": "connectedService:AzureRM",
      "label": "AzureRM Subscription",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Select the Azure Resource Manager subscription."
    },
    {
      "name": "resourceGroupName",
      "type": "pickList",
      "label": "Resource Group",
      "defaultValue": "",
      "required": true,
      "properties": {
        "EditableOptions": "True"
      },
      "helpMarkDown": "Enter or Select the Azure Resource Group that contains the Service Bus namespace specified above."
    },
    {
      "name": "KeyVaultName",
      "type": "pickList",
      "label": "Key Vault Name",
      "defaultValue": "",
      "required": true,
      "properties": {
        "EditableOptions": "True"
      },
      "helpMarkDown": "Enter or Select the name of an existing Azure Key Vault."
    },
    {
      "name": "domain",
      "type": "string",
      "label": "Domain or comma-separated SANs",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "One or more domain names to include in this order/certificate. The first one in the list will be considered the MainDomain and be set as the subject of the finalized certificate."
    },
    {
      "name": "username",
      "type": "string",
      "label": "AzureAD ApplicationID",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The ApplicationID of an AzureAD registered app that has permission to create and delete records in the required DNS zones."
    },
    {
      "name": "password",
      "type": "string",
      "label": "AzureAD Password",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "This is the password (aka 'key') for the associated ApplicationID."
    },
    {
      "name": "pfxpassword",
      "type": "string",
      "label": "PFX Password",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "This is the password used to encode the PFX file that is uploaded to Key Vault.  If one is not provided, a random one will be generated."
    },
    {
      "name": "SubscriptionId",
      "type": "string",
      "label": "Azure subscription ID",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "This is the Azure subscription ID containing the DNS zone."
    },
    {
      "name": "TenantId",
      "type": "string",
      "label": "Azure Tenant ID",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "This is the Azure Tenant ID containing the DNS zone."
    },
    {
      "name": "secretName",
      "type": "string",
      "label": "Output variable name",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Name of the output variable that will be passed back to VSTS containing the name of the Key Vault secret."
    },
    {
      "name": "CertKeyLength",
      "type": "integer",
      "label": "Certificate key length",
      "defaultValue": "2048",
      "required": false,
      "helpMarkDown": "Must be between 2048-4096 (divisible by 128) for RSA keys."
    },
    {
      "name": "DNSSleep",
      "type": "integer",
      "label": "DNS sleep time (seconds)",
      "defaultValue": "60",
      "required": false,
      "helpMarkDown": "Number of seconds to wait for DNS changes to propagate before asking the ACME server to validate DNS challenges. Default is 60."
    },
    {
      "name": "Purpose",
      "type": "string",
      "label": "Certificate Purpose",
      "defaultValue": "",
      "required": false,
      "groupName": "tagValues",
      "helpMarkDown": "Purpose of the certificate to be recorded as a tag value on the Key Vault secret"
    },
    {
      "name": "WhereInstalled",
      "type": "string",
      "label": "Where Installed",
      "defaultValue": "",
      "required": false,
      "groupName": "tagValues",
      "helpMarkDown": "What services this certificate will be installed to be recorded as a tag value on the Key Vault secret"
    },
    {
      "name": "Environment",
      "type": "string",
      "label": "Environment",
      "defaultValue": "",
      "required": false,
      "groupName": "tagValues",
      "helpMarkDown": "Environment value to be recorded as a tag value on the Key Vault secret"
    },
    {
      "name": "Tenant",
      "type": "string",
      "label": "Tenant",
      "defaultValue": "",
      "required": false,
      "groupName": "tagValues",
      "helpMarkDown": "Tenant value (in multi-tenant environments) to be recorded as a tag value on the Key Vault secret"
    },
    {
      "name": "Product",
      "type": "string",
      "label": "Product",
      "defaultValue": "",
      "required": false,
      "groupName": "tagValues",
      "helpMarkDown": "Product designation to be recorded as a tag value on the Key Vault secret"
    },
    {
      "name": "Applications",
      "type": "string",
      "label": "Product",
      "defaultValue": "",
      "required": false,
      "groupName": "tagValues",
      "helpMarkDown": "Any applications that reference this certificate to be recorded as a tag value on the Key Vault secret"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "resourceGroupName",
      "endpointId": "$(ConnectedServiceName)",
      "dataSourceName": "AzureResourceGroups"
    },
    {
      "target": "KeyVaultName",
      "endpointId": "$(ConnectedServiceName)",
      "dataSourceName": "AzureKeyVaults"
    }
  ],
  "instanceNameFormat": "Request LetsEncrypy Certificate",
  "execution": {
    "PowerShell3": {
      "target": "$(currentDirectory)\\VSTS-LetsEncrypt.ps1",
      "argumentFormat": "",
      "workingDirectory": "$(currentDirectory)"
    }
  }
}
