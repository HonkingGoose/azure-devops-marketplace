{
    "id": "16a2ad20-f191-11e5-bed4-ab22bcd17937",
    "name": "BuildQualityChecks",
    "friendlyName": "Build Quality Checks",
    "description": "Breaks a build based on quality metrics like number of warnings or code coverage.",
    "author": "Microsoft Premier Services",
    "helpMarkDown": "[More information](https://github.com/almtcger/VstsExtensions/blob/master/BuildQualityChecks/en-US/overview.md)",
    "category": "Build",
    "visibility": [
        "Build"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "4",
        "Patch": "2"
    },
    "minimumAgentVersion": "1.95.0",
    "instanceNameFormat": "Check build quality",
    "groups": [{
            "name": "warnings",
            "displayName": "Warnings Policy",
            "isExpanded": true
        },
        {
            "name": "coverage",
            "displayName": "Code Coverage Policy",
            "isExpanded": true
        }
    ],
    "inputs": [{
            "name": "checkWarnings",
            "type": "boolean",
            "label": "Enabled",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Activate to check build warnings.",
            "groupName": "warnings"
        },
        {
            "name": "warningFailOption",
            "type": "radio",
            "label": "Fail Build On",
            "defaultValue": "build",
            "required": true,
            "helpMarkDown": "Fail build either if it exceeds a fixed number of warnings or the previous build's warning count.",
            "groupName": "warnings",
            "options": {
                "fixed": "Fixed Threshold",
                "build": "Previous Value"
            },
            "visibleRule": "checkWarnings = true"
        },
        {
            "name": "warningThreshold",
            "type": "string",
            "label": "Warning Threshold",
            "defaultValue": "0",
            "required": true,
            "helpMarkDown": "Specify the maximum number of warnings. The build will fail if this number is exceeded.",
            "groupName": "warnings",
            "visibleRule": "checkWarnings = true && warningFailOption = fixed"
        },
        {
            "name": "forceFewerWarnings",
            "type": "boolean",
            "label": "Force Fewer Warnings",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "If checked, the build will fail if the number of warnings has not decreased since the last build.",
            "groupName": "warnings",
            "visibleRule": "checkWarnings = true && warningFailOption = build"
        },
        {
            "name": "warningTaskFilters",
            "type": "multiLine",
            "label": "Task Filters",
            "defaultValue": "/^(((android|xcode|gradlew)\\s+)?build|ant|maven|cmake|gulp)/i",
            "required": false,
            "helpMarkDown": "Regular expressions (one per line) to include relevant warnings. Note: Use JavaScript RegExp syntax. [More information](http://www.regular-expressions.info/javascript.html)",
            "groupName": "warnings",
            "visibleRule": "checkWarnings = true"
        },
        {
            "name": "checkCoverage",
            "type": "boolean",
            "label": "Enabled",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Activate to check code coverage.",
            "groupName": "coverage"
        },
        {
            "name": "coverageFailOption",
            "type": "radio",
            "label": "Fail Build On",
            "defaultValue": "build",
            "required": true,
            "helpMarkDown": "Fail build if its code coverage value falls below a fixed value or the previous build's code coverage value.",
            "groupName": "coverage",
            "options": {
                "fixed": "Fixed Threshold",
                "build": "Previous Value"
            },
            "visibleRule": "checkCoverage = true"
        },
        {
            "name": "coverageType",
            "type": "radio",
            "label": "Coverage Type",
            "defaultValue": "blocks",
            "required": true,
            "helpMarkDown": "Set the coverage type, based on which the coverage policy will determine coverage values.",
            "groupName": "coverage",
            "options": {
                "blocks": "Block Coverage",
                "lines": "Line Coverage",
                "branches": "Branch Coverage",
                "custom": "Custom Coverage"
            },
            "visibleRule": "checkCoverage = true"
        },
        {
            "name": "customCoverageType",
            "type": "string",
            "label": "Coverage Type Name",
            "defaultValue": "",
            "required": "true",
            "helpMarkDown": "Specify the name of the custom coverage type. The name must match one of the names listed in the code coverage section of the build summary page.",
            "groupName": "coverage",
            "visibleRule": "checkCoverage = true && coverageType = custom"
        },
        {
            "name": "coverageThreshold",
            "type": "string",
            "label": "Code Coverage Threshold",
            "defaultValue": "60",
            "required": true,
            "helpMarkDown": "Specify the minimum code coverage value in percentage terms.",
            "groupName": "coverage",
            "visibleRule": "checkCoverage = true && coverageFailOption = fixed"
        },
        {
            "name": "forceCoverageImprovement",
            "type": "boolean",
            "label": "Force Coverage Improvement",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "If checked, the build will fail if code coverage value has not improved since the last build.",
            "groupName": "coverage",
            "visibleRule": "checkCoverage = true && coverageFailOption = build"
        },
        {
            "name": "coverageUpperThreshold",
            "type": "string",
            "label": "Upper Threshold",
            "defaultValue": "80",
            "required": true,
            "helpMarkDown": "Specify the upper threshold for code coverage improvements. [More information](https://github.com/almtcger/VstsExtensions/blob/master/BuildQualityChecks/en-US/overview.md#parameters-of-the-code-coverage-policy)",
            "groupName": "coverage",
            "visibleRule": "checkCoverage = true && coverageFailOption = build && forceCoverageImprovement = true"
        },
        {
            "name": "coverageDeltaType",
            "type": "radio",
            "label": "Delta Type",
            "defaultValue": "absolute",
            "required": false,
            "helpMarkDown": "Use percentage value or absolute value when comparing code coverage.",
            "groupName": "coverage",
            "options": {
                "percentage": "Percentage Value",
                "absolute": "Absolute Value"
            },
            "visibleRule": "checkCoverage = true && coverageFailOption = build && forceCoverageImprovement = false"
        },
        {
            "name": "coverageModuleFilters",
            "type": "multiLine",
            "label": "Module Filters",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "**DEPRECATED** - Regular expressions (one per line) to include relevant modules. Note: Use JavaScript RegExp syntax. [More information](http://www.regular-expressions.info/javascript.html)",
            "groupName": "coverage",
            "visibleRule": "checkCoverage = true"
        }
    ],
    "execution": {
        "Node": {
            "target": "task.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "NoPolicyEnabled": "No build quality policies have been enabled.",
        "PrevBuildWarningsExceeded": "The number of warnings (%d) has increased since the previous build! The previous build had %d warning(s).",
        "NotFewerWarnings": "The number of warnings (%d) has not decreased since the previous build! The previous build had %d warning(s).",
        "WarningThresholdExceeded": "The number of warnings (%d) exceeds the threshold (%d)!",
        "NoMatchingTaskFilter": "The specified task filters did not match any build task.",
        "InvalidRegEx": "The expression '%s' is not a valid regular expression and will be ignored.",
        "WarningsPassed": "Warnings policy passed with %d warning(s).",
        "BelowCoverageThreshold": "The code coverage value (%d%%, %d %s) is lower than the minimum value (%d%%)!",
        "BelowPrevBuildCoverage": "The code coverage value (%d%%, %d %s) is lower than the value of the previous build! The previous build had a coverage value of %d%% (%d %s).",
        "NoCoverageImprovement": "The code coverage value (%d%%, %d %s) has not improved since the last build! The previous build had a coverage value of %d%% (%d %s).",
        "NoModulesMatched": "The specified module filters did not match any code coverage modules.",
        "EvaluatingModules": "Calculating code coverage for modules:",
        "CoveragePassed": "Code coverage policy passed with %d%% (%d %s).",
        "TaskFailed": "At least one build quality policy was violated. See Build Quality Checks section for more details.",
        "EvaluateWarnings": "Validating build warnings policy...",
        "EvaluateCoverage": "Validating code coverage policy...",
        "WaitForTaskCompletion": "Waiting for previous tasks to upload information...",
        "ThirdPartyCoverageTools": "There are 3rd party code coverage tools inside this build. Module filters are ignored."
    }
}